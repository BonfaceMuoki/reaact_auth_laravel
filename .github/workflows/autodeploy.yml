name: autodeploy
on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Testing-Initiation
        run: echo "Testing workflow initiation!"
      - name: Copy env.example to .env in api
        run: cp api/.env.example api/.env

      - name: Assign value in .env
        run: |
          sed -i 's/GOOGLE_SITE_KEY=.*/GOOGLE_SITE_KEY=${{ secrets.GOOGLE_SITE_KEY }}/' api/.env

      - name: Display  api .env contents
        run: cat api/.env
      - name: Deploying API
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
                 cd /var/www/html
                 sudo git clone https://github.com/BonfaceMuoki/valuation-delivery-platform .
                 cd api
                 sudo cp .env.prod .env
                 composer install --no-interaction --prefer-dist --optimize-autoloader                
                 sed -i 's/APP_NAME=.*/APP_NAME=${{ secrets.APP_NAME }}/' /var/www/html/api/.env
                 sed -i 's/APP_ENV=.*/APP_ENV=${{ secrets.APP_ENV_PROD }}/' /var/www/html/api/.env
                 sed -i 's/APP_DEBUG=.*/APP_DEBUG=${{ secrets.APP_DEBUG }}/' /var/www/html/api/.env
                 sed -i 's/APP_URL=.*/APP_URL=${{ secrets.APP_URL }}/' /var/www/html/api/.env
                 sed -i 's/DB_CONNECTION=.*/DB_CONNECTION=${{ secrets.DB_CONNECTION }}/' /var/www/html/api/.env
                 sed -i 's/DB_HOST=.*/DB_HOST=${{ secrets.DB_HOST }}/' /var/www/html/api/.env
                 sed -i 's/DB_PORT=.*/DB_PORT=${{ secrets.DB_PORT }}/' /var/www/html/api/.env
                 sed -i 's/DB_DATABASE=.*/DB_DATABASE=${{ secrets.DB_DATABASE }}/' /var/www/html/api/.env
                 sed -i 's/DB_USERNAME=.*/DB_USERNAME=${{ secrets.DB_USERNAME }}/' /var/www/html/api/.env
                 sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=${{ secrets.DB_PASSWORD }}/' /var/www/html/api/.env
                 sed -i 's/GOOGLE_SITE_KEY=.*/GOOGLE_SITE_KEY=${{ secrets.GOOGLE_SITE_KEY }}/' /var/www/html/api/.env
                 chmod -R 777 storage
                 chmod -R 777 public/reportqr_codes
                 chmod -R 777 public/reports               
                 php artisan migrate --force
                 php artisan db:seed
                 php artisan jwt:secret --force
                 php artisan optimize
                 php artisan key:generate
                 php artisan config:cache

      - name: Deploying Dashboard
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
                 cd /var/www/html/dashboard
                 sudo cp .env.prod .env
                 rm -rf node_modules
                 npm install                           
                 sed -i 's/REACT_APP_FRONTEND_BASE_URL=.*/REACT_APP_FRONTEND_BASE_URL=${{ secrets.REACT_APP_FRONTEND_BASE_URL }}/' /var/www/html/dashboard/.env
                 sed -i 's/REACT_APP_FRONT_BASE_URL=.*/REACT_APP_FRONT_BASE_URL=${{ secrets.REACT_APP_FRONT_BASE_URL }}/' /var/www/html/dashboard/.env
                 sed -i 's/REACT_APP_API_BASE_URL=.*/REACT_APP_API_BASE_URL=${{ secrets.REACT_APP_API_BASE_URL }}/' /var/www/html/dashboard/.env
                 sed -i 's/REACT_APP_reCAPTCHA_SITE_KEY=.*/REACT_APP_reCAPTCHA_SITE_KEY=${{ secrets.REACT_APP_reCAPTCHA_SITE_KEY }}/' /var/www/html/dashboard/.env
                 sed -i 's/REACT_APP_reCAPTCHA_SECRET_KEY=.*/REACT_APP_reCAPTCHA_SECRET_KEY=${{ secrets.REACT_APP_reCAPTCHA_SECRET_KEY }}/' /var/www/html/dashboard/.env

      - name: Deploying Dashboard npm build
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
                cd /var/www/html/dashboard
                npm run build      
                 
      - name: Deploying Dashboard build copy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
                cd /var/www/html/dashboard
                sudo mv -r build/* .d  


